<!DOCTYPE html>
<html>
  <head>
    <title>Quantilzier - your algorithmic trading platform</title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

	<script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
	<script type="text/javascript">
	$(window).load(function() {
		$(".loader").fadeOut("slow");
	})
	</script>
    
    <!--  
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage 
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.
        
        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:
            
            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!--STYLES-->
    <link rel="stylesheet" href="/styles/bootstrap.css">
    <link rel="stylesheet" href="/styles/codemirror.css">
    <link rel="stylesheet" href="/styles/importer.css">
    <!--STYLES END-->
  </head>

  <body>
  	<!--Header-->
  	<div class="navbar navbar-inverse navbar-fixed-top">
		<div class="container">
			<div class="navbar-header">
				<button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
					<span class="icon-bar"></span>
					<span class="icon-bar"></span>
					<span class="icon-bar"></span>
				</button>
				<a class="navbar-brand" href="/">Quantilizer</a>
			</div>
			<div class="navbar-collapse collapse">
				<ul class="nav navbar-nav">
					<% if (session.authenticated) { %>
			        <li class="dropdown">
			        	<a href="#" class="dropdown-toggle" data-toggle="dropdown">User</a>
			        	<ul class="dropdown-menu" role="menu">
			            	<li><a href="/user/show/<%= session.User.id %>">Profile</a></li>
			            	<li><a href="/message/inbox/<%= session.User.id %>">Inbox</a></li>
							<% if (session.authenticated && session.User.admin) { %>
			            	<li><a href="/user">Administration</a></li>
							<% } %>
			            	<li class="divider"></li>
			            	<li><a href="/session/destroy">Sign Out</a></li>
			          	</ul>
			        </li>
					<li class="dropdown">
			        	<a href="#" class="dropdown-toggle" data-toggle="dropdown">Strategy</a>
			        	<ul class="dropdown-menu" role="menu">
			            	<li><a href="/indicator/show">Show Indiactor</a></li>
							<li><a href="/indicator/new">Create Indicator</a></li>
			            	<li class="divider"></li>
			            	<li><a href="/strategy/new">Strategy Formation</a></li>
							<li><a href="#">Strategy Shop</a></li>
			            	<li><a href="#">Others</a></li>
			          	</ul>
					</li>
					<% } %>
				</ul>
				<div class="navbar-right">
					<% if (session.authenticated) { %>
						<a class="btn btn-default navbar-btn navbar-right" href="/session/destroy">sign-out</a>
					<% } %>
				</div>
				<% if (!session.authenticated) { %>
					<form class="navbar-form navbar-right" action="/session/create">
						<div class="form-group">
							<input type="text" placeholder="Email" name="email" class="form-control">
						</div>
						<div class="form-group">
							<input type="password" placeholder="Password" name="password" class="form-control">
						</div>
						<button type="submit" class="btn btn-success">Sign in</button>
						<input type="hidden" name="_csrf" value="<%= _csrf %>" />
					</form>
				<% } %>
			</div> 
		</div>
	</div> 
  	<!--End Header-->
  
    <%- body %>

	<!--Footer-->
	<div class="container">
		<hr>
		<footer class="footer pull-right">
			<div>
				<a href="http://sailsjs.com/">Quantilizer</a>
				<div>found on Nov 2015, Hong Kong</div>
			</div>
		</footer>
	</div>
	<!--End Footer-->

    <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).
        
        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

    <!--TEMPLATES-->
    
    <!--TEMPLATES END-->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can 
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.
      
      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:
          
          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->	

    <!--SCRIPTS-->
    <script src="/js/dependencies/sails.io.js"></script>
    <script src="/js/dependencies/codemirror.js"></script>
    <script src="/js/dependencies/javascript.js"></script>
    <script src="/js/dependencies/jquery-1.11.1.min.js"></script>
    <script src="/js/dependencies/jquery.validate.min.js"></script>
    <script src="/js/bootstrap.js"></script>
    <script src="/js/customValidate.js"></script>
    <script src="/js/exporting.js"></script>
    <script src="/js/highstock.js"></script>
    <script src="/js/moment.js"></script>
    <script src="/js/share.js"></script>
    <!--SCRIPTS END-->
	<%- blocks.localScripts %>
  </body>
</html>
